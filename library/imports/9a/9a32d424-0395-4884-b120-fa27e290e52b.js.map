{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAGJC,oBAAY;AAHR,KAHP;;AASDC,uBAAmB,6BAAY;AAC3B,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KAbA;;AAeDK,cAAU,oBAAW;;AAEjB,aAAKR,IAAL,CAAUS,YAAV;AACA,aAAKT,IAAL,CAAUU,SAAV;AACA,aAAKN,IAAL,CAAUO,OAAV;AACH,KApBA;;AAsBDC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAI,KAAKf,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC5C,iBAAKW,QAAL;AACA;AACH;;AAED,YAAIM,eAAe,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAgB,KAAKf,IAAL,CAAUgB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKb,IAAL,CAAUc,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGJ;;AAEA;;;AAIA;AAvDK,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n     \r\n            \r\n            pickRadius: 0,\r\n        },\r\n    \r\n        getPlayerDistance: function () {\r\n            var playerPos = this.game.player.getPosition();\r\n            var dist = this.node.position.sub(playerPos).mag();\r\n            return dist;\r\n        },\r\n    \r\n        onPicked: function() {\r\n       \r\n            this.game.spawnNewStar();\r\n            this.game.gainScore();\r\n            this.node.destroy();\r\n        },\r\n    \r\n        update: function (dt) {\r\n            if (this.getPlayerDistance() < this.pickRadius) {\r\n                this.onPicked();\r\n                return;\r\n            }\r\n            \r\n            var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n            var minOpacity = 50;\r\n            this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n        },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    \r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n   \r\n\r\n    // update (dt) {},\r\n});\r\n"]}